version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.11
    commands:
      - echo "Installing dependencies..."
      - pip install --upgrade pip
      - pip install -r requirements.txt || true  # Allow this to fail if requirements.txt is missing
      - echo "Verifying Java version..."
      - java -version
      - echo "Downloading SonarScanner 5.1.0..."
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.1.0.28487-linux.zip
      - unzip sonar-scanner-cli-5.1.0.28487-linux.zip
      - mv sonar-scanner-5.1.0.28487-linux /opt/sonar-scanner
      - /opt/sonar-scanner/bin/sonar-scanner --version
      - echo "Downloading OWASP Dependency-Check..."
      - wget https://github.com/jeremylong/DependencyCheck/releases/download/v12.1.0/dependency-check-12.1.0-release.zip
      - unzip dependency-check-12.1.0-release.zip
      - mv dependency-check /opt/dependency-check
      - /opt/dependency-check/bin/dependency-check.sh --version

  pre_build:
    commands:
      - echo "Verifying Python version..."
      - python --version
      - echo "Running pylint..."
      - pylint $CODEBUILD_SRC_DIR/*.py > pylint-report-root.txt || true
      - pylint $CODEBUILD_SRC_DIR/restaurant_complaint_system/*.py > pylint-report-restaurant.txt || true
      - pylint $CODEBUILD_SRC_DIR/complaints/*.py > pylint-report-complaints.txt || true
      - cat pylint-report-root.txt pylint-report-restaurant.txt pylint-report-complaints.txt > pylint-report.txt

  build:
    commands:
      - echo "Running SonarCloud scan..."
      - /opt/sonar-scanner/bin/sonar-scanner -X -Dsonar.login=$SONAR_TOKEN
      - echo "Running OWASP Dependency-Check..."
      - echo "Working directory: $(pwd)"
      - ls -la
      - if [ -f requirements.txt ]; then echo "requirements.txt exists, running Dependency-Check..."; cat requirements.txt; mkdir -p nvd-cache; /opt/dependency-check/bin/dependency-check.sh --project "Django Project" --scan requirements.txt --out ./dependency-check-report --log dependency-check.log; else echo "requirements.txt not found, skipping Dependency-Check..."; fi

  post_build:
    commands:
      - echo "Build, SonarCloud scan, and Dependency-Check completed"

artifacts:
  files:
    - pylint-report.txt
    - dependency-check-report/*
    - dependency-check.log

cache:
  paths:
    - nvd-cache/**/*
